basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  todo.TodoDB:
    properties:
      completed:
        type: boolean
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  todo.createTodoRequest:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  todo.createTodoResponse:
    properties:
      id:
        type: string
    type: object
info:
  contact:
    name: ZiplEix
  description: An example template of a Golang backend API using Fiber and Postgres.
  title: API Template
  version: "2.0"
paths:
  /todos:
    get:
      consumes:
      - '*/*'
      description: fetch every todo available.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.TodoDB'
            type: array
      summary: Get all todos.
      tags:
      - todos
    post:
      consumes:
      - '*/*'
      description: creates one todo.
      parameters:
      - description: Todo to create
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/todo.createTodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todo.createTodoResponse'
      summary: Create one todo.
      tags:
      - todos
swagger: "2.0"
